### YamlMime:ManagedReference
items:
- uid: Assessment3.Finding
  commentId: T:Assessment3.Finding
  id: Finding
  parent: Assessment3
  children:
  - Assessment3.Finding.#ctor
  - Assessment3.Finding.#ctor(System.String)
  - Assessment3.Finding.findaCustomer(Assessment3.Customer)
  - Assessment3.Finding.FindCustomer(Assessment3.Customer)
  - Assessment3.Finding.findingCustomers
  - Assessment3.Finding.Name
  - Assessment3.Finding.NumCustomer
  langs:
  - csharp
  - vb
  name: Finding
  nameWithType: Finding
  fullName: Assessment3.Finding
  type: Class
  source:
    id: Finding
    path: F:\Open Polytechnic\Open Polytechnic Bachelor Degree in Information Technology\BIT706 Programming 3\BIT706_Assessment2_3525331_Christopher_Tipper\Assessment2PartA\Assessment2PartA\Finding.cs
    startLine: 9
  assemblies:
  - Assessment2PartA
  namespace: Assessment3
  syntax:
    content: public class Finding
    content.vb: Public Class Finding
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Assessment3.Finding.findingCustomers
  commentId: F:Assessment3.Finding.findingCustomers
  id: findingCustomers
  parent: Assessment3.Finding
  langs:
  - csharp
  - vb
  name: findingCustomers
  nameWithType: Finding.findingCustomers
  fullName: Assessment3.Finding.findingCustomers
  type: Field
  source:
    id: findingCustomers
    path: F:\Open Polytechnic\Open Polytechnic Bachelor Degree in Information Technology\BIT706 Programming 3\BIT706_Assessment2_3525331_Christopher_Tipper\Assessment2PartA\Assessment2PartA\Finding.cs
    startLine: 12
  assemblies:
  - Assessment2PartA
  namespace: Assessment3
  syntax:
    content: public List<Customer> findingCustomers
    return:
      type: System.Collections.Generic.List{Assessment3.Customer}
    content.vb: Public findingCustomers As List(Of Customer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Assessment3.Finding.#ctor(System.String)
  commentId: M:Assessment3.Finding.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Assessment3.Finding
  langs:
  - csharp
  - vb
  name: Finding(String)
  nameWithType: Finding.Finding(String)
  fullName: Assessment3.Finding.Finding(System.String)
  type: Constructor
  source:
    id: .ctor
    path: F:\Open Polytechnic\Open Polytechnic Bachelor Degree in Information Technology\BIT706 Programming 3\BIT706_Assessment2_3525331_Christopher_Tipper\Assessment2PartA\Assessment2PartA\Finding.cs
    startLine: 13
  assemblies:
  - Assessment2PartA
  namespace: Assessment3
  syntax:
    content: public Finding(string findCustomer)
    parameters:
    - id: findCustomer
      type: System.String
    content.vb: Public Sub New(findCustomer As String)
  overload: Assessment3.Finding.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Assessment3.Finding.#ctor
  commentId: M:Assessment3.Finding.#ctor
  id: '#ctor'
  parent: Assessment3.Finding
  langs:
  - csharp
  - vb
  name: Finding()
  nameWithType: Finding.Finding()
  fullName: Assessment3.Finding.Finding()
  type: Constructor
  source:
    id: .ctor
    path: F:\Open Polytechnic\Open Polytechnic Bachelor Degree in Information Technology\BIT706 Programming 3\BIT706_Assessment2_3525331_Christopher_Tipper\Assessment2PartA\Assessment2PartA\Finding.cs
    startLine: 17
  assemblies:
  - Assessment2PartA
  namespace: Assessment3
  syntax:
    content: public Finding()
    content.vb: Public Sub New
  overload: Assessment3.Finding.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Assessment3.Finding.Name
  commentId: P:Assessment3.Finding.Name
  id: Name
  parent: Assessment3.Finding
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Finding.Name
  fullName: Assessment3.Finding.Name
  type: Property
  source:
    id: Name
    path: F:\Open Polytechnic\Open Polytechnic Bachelor Degree in Information Technology\BIT706 Programming 3\BIT706_Assessment2_3525331_Christopher_Tipper\Assessment2PartA\Assessment2PartA\Finding.cs
    startLine: 19
  assemblies:
  - Assessment2PartA
  namespace: Assessment3
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Assessment3.Finding.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Assessment3.Finding.FindCustomer(Assessment3.Customer)
  commentId: M:Assessment3.Finding.FindCustomer(Assessment3.Customer)
  id: FindCustomer(Assessment3.Customer)
  parent: Assessment3.Finding
  langs:
  - csharp
  - vb
  name: FindCustomer(Customer)
  nameWithType: Finding.FindCustomer(Customer)
  fullName: Assessment3.Finding.FindCustomer(Assessment3.Customer)
  type: Method
  source:
    id: FindCustomer
    path: F:\Open Polytechnic\Open Polytechnic Bachelor Degree in Information Technology\BIT706 Programming 3\BIT706_Assessment2_3525331_Christopher_Tipper\Assessment2PartA\Assessment2PartA\Finding.cs
    startLine: 22
  assemblies:
  - Assessment2PartA
  namespace: Assessment3
  syntax:
    content: public void FindCustomer(Customer c)
    parameters:
    - id: c
      type: Assessment3.Customer
    content.vb: Public Sub FindCustomer(c As Customer)
  overload: Assessment3.Finding.FindCustomer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Assessment3.Finding.NumCustomer
  commentId: M:Assessment3.Finding.NumCustomer
  id: NumCustomer
  parent: Assessment3.Finding
  langs:
  - csharp
  - vb
  name: NumCustomer()
  nameWithType: Finding.NumCustomer()
  fullName: Assessment3.Finding.NumCustomer()
  type: Method
  source:
    id: NumCustomer
    path: F:\Open Polytechnic\Open Polytechnic Bachelor Degree in Information Technology\BIT706 Programming 3\BIT706_Assessment2_3525331_Christopher_Tipper\Assessment2PartA\Assessment2PartA\Finding.cs
    startLine: 33
  assemblies:
  - Assessment2PartA
  namespace: Assessment3
  syntax:
    content: public int NumCustomer()
    return:
      type: System.Int32
    content.vb: Public Function NumCustomer As Integer
  overload: Assessment3.Finding.NumCustomer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Assessment3.Finding.findaCustomer(Assessment3.Customer)
  commentId: M:Assessment3.Finding.findaCustomer(Assessment3.Customer)
  id: findaCustomer(Assessment3.Customer)
  parent: Assessment3.Finding
  langs:
  - csharp
  - vb
  name: findaCustomer(Customer)
  nameWithType: Finding.findaCustomer(Customer)
  fullName: Assessment3.Finding.findaCustomer(Assessment3.Customer)
  type: Method
  source:
    id: findaCustomer
    path: F:\Open Polytechnic\Open Polytechnic Bachelor Degree in Information Technology\BIT706 Programming 3\BIT706_Assessment2_3525331_Christopher_Tipper\Assessment2PartA\Assessment2PartA\Finding.cs
    startLine: 37
  assemblies:
  - Assessment2PartA
  namespace: Assessment3
  syntax:
    content: public bool findaCustomer(Customer c)
    parameters:
    - id: c
      type: Assessment3.Customer
    return:
      type: System.Boolean
    content.vb: Public Function findaCustomer(c As Customer) As Boolean
  overload: Assessment3.Finding.findaCustomer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Assessment3
  commentId: N:Assessment3
  name: Assessment3
  nameWithType: Assessment3
  fullName: Assessment3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{Assessment3.Customer}
  commentId: T:System.Collections.Generic.List{Assessment3.Customer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Customer>
  nameWithType: List<Customer>
  fullName: System.Collections.Generic.List<Assessment3.Customer>
  nameWithType.vb: List(Of Customer)
  fullName.vb: System.Collections.Generic.List(Of Assessment3.Customer)
  name.vb: List(Of Customer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Assessment3.Customer
    name: Customer
    nameWithType: Customer
    fullName: Assessment3.Customer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Assessment3.Customer
    name: Customer
    nameWithType: Customer
    fullName: Assessment3.Customer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Assessment3.Finding.#ctor*
  commentId: Overload:Assessment3.Finding.#ctor
  name: Finding
  nameWithType: Finding.Finding
  fullName: Assessment3.Finding.Finding
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Assessment3.Finding.Name*
  commentId: Overload:Assessment3.Finding.Name
  name: Name
  nameWithType: Finding.Name
  fullName: Assessment3.Finding.Name
- uid: Assessment3.Finding.FindCustomer*
  commentId: Overload:Assessment3.Finding.FindCustomer
  name: FindCustomer
  nameWithType: Finding.FindCustomer
  fullName: Assessment3.Finding.FindCustomer
- uid: Assessment3.Customer
  commentId: T:Assessment3.Customer
  parent: Assessment3
  name: Customer
  nameWithType: Customer
  fullName: Assessment3.Customer
- uid: Assessment3.Finding.NumCustomer*
  commentId: Overload:Assessment3.Finding.NumCustomer
  name: NumCustomer
  nameWithType: Finding.NumCustomer
  fullName: Assessment3.Finding.NumCustomer
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Assessment3.Finding.findaCustomer*
  commentId: Overload:Assessment3.Finding.findaCustomer
  name: findaCustomer
  nameWithType: Finding.findaCustomer
  fullName: Assessment3.Finding.findaCustomer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
